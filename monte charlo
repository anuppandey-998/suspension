{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyM8BjHR1OXrJ9mLacRtQBNN",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/anuppandey-998/suspension/blob/main/monte%20charlo\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YDRQ-eZeXgER"
      },
      "source": [
        "import random \r\n",
        "\r\n",
        "INTERVAL= 1000\r\n",
        "\r\n",
        "circle_points= 0\r\n",
        "square_points= 0\r\n",
        "\r\n",
        "# Total Random numbers generated= possible x \r\n",
        "# values* possible y values \r\n",
        "for i in range(INTERVAL**2): \r\n",
        "\r\n",
        "\t# Randomly generated x and y values from a \r\n",
        "\t# uniform distribution \r\n",
        "\t# Rannge of x and y values is -1 to 1 \r\n",
        "\trand_x= random.uniform(-1, 1) \r\n",
        "\trand_y= random.uniform(-1, 1) \r\n",
        "\r\n",
        "\t# Distance between (x, y) from the origin \r\n",
        "\torigin_dist= rand_x**2 + rand_y**2\r\n",
        "\r\n",
        "\t# Checking if (x, y) lies inside the circle \r\n",
        "\tif origin_dist<= 1: \r\n",
        "\t\tcircle_points+= 1\r\n",
        "\r\n",
        "\tsquare_points+= 1\r\n",
        "\r\n",
        "\t# Estimating value of pi, \r\n",
        "\t# pi= 4*(no. of points generated inside the \r\n",
        "\t# circle)/ (no. of points generated inside the square) \r\n",
        "\tpi = 4* circle_points/ square_points \r\n",
        "\r\n",
        "## print(rand_x, rand_y, circle_points, square_points, \"-\", pi) \r\n",
        "## print(\"\\n\") \r\n",
        "\r\n",
        "print(\"Final Estimation of Pi=\", pi)\t \r\n"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}